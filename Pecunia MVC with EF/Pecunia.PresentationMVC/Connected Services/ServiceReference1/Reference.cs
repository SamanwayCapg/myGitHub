//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pecunia.PresentationMVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionDataContract", Namespace="http://schemas.datacontract.org/2004/07/TeamF.WCF")]
    [System.SerializableAttribute()]
    public partial class TransactionDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfTransactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeOfTransactionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChequeNumber {
            get {
                return this.ChequeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeNumberField, value) != true)) {
                    this.ChequeNumberField = value;
                    this.RaisePropertyChanged("ChequeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfTransaction {
            get {
                return this.DateOfTransactionField;
            }
            set {
                if ((this.DateOfTransactionField.Equals(value) != true)) {
                    this.DateOfTransactionField = value;
                    this.RaisePropertyChanged("DateOfTransaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((this.TransactionIDField.Equals(value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeOfTransaction {
            get {
                return this.TypeOfTransactionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeOfTransactionField, value) != true)) {
                    this.TypeOfTransactionField = value;
                    this.RaisePropertyChanged("TypeOfTransaction");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITransactionService")]
    public interface ITransactionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetAllTransactions", ReplyAction="http://tempuri.org/ITransactionService/GetAllTransactionsResponse")]
        Pecunia.PresentationMVC.ServiceReference1.TransactionDataContract[] GetAllTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetAllTransactions", ReplyAction="http://tempuri.org/ITransactionService/GetAllTransactionsResponse")]
        System.Threading.Tasks.Task<Pecunia.PresentationMVC.ServiceReference1.TransactionDataContract[]> GetAllTransactionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionServiceChannel : Pecunia.PresentationMVC.ServiceReference1.ITransactionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionServiceClient : System.ServiceModel.ClientBase<Pecunia.PresentationMVC.ServiceReference1.ITransactionService>, Pecunia.PresentationMVC.ServiceReference1.ITransactionService {
        
        public TransactionServiceClient() {
        }
        
        public TransactionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Pecunia.PresentationMVC.ServiceReference1.TransactionDataContract[] GetAllTransactions() {
            return base.Channel.GetAllTransactions();
        }
        
        public System.Threading.Tasks.Task<Pecunia.PresentationMVC.ServiceReference1.TransactionDataContract[]> GetAllTransactionsAsync() {
            return base.Channel.GetAllTransactionsAsync();
        }
    }
}
